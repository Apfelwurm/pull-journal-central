name: Test and Build

on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: 
      - main
      - dev
  repository_dispatch: # Allows action to be triggered via webhook
  workflow_dispatch: # Allows action to be run manually from the Actions tab


jobs:
  # laravel-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: shivammathur/setup-php@v2
  #     with:
  #       php-version: '8.2'
  #   - uses: actions/checkout@v3
  #   - name: Copy .env
  #     run: cp .env.prd.example .env
  #   - name: Install Dependencies
  #     run: composer install -q --no-ansi  --ignore-platform-reqs --no-interaction --no-scripts --no-progress --prefer-dist
  #   - name: Generate key
  #     run: php artisan key:generate
  #   - name: Directory Permissions
  #     run: chmod -R 777 storage bootstrap/cache
  #   - name: Create Database
  #     run: |
  #       mkdir -p database
  #       touch database/database.sqlite
  #   - name: Execute tests (Unit and Feature tests) via PHPUnit
  #     env:
  #       DB_CONNECTION: sqlite
  #       DB_DATABASE: database/database.sqlite
  #     run: php artisan test
  build-docker:
      # needs: laravel-tests
      if: ${{ github.ref_name == 'main' }}
      runs-on: 'ubuntu-latest'
      steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Build Linux Image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: ./docker/Dockerfile
          tags: |
            apfelwurm/pull-journal-central:latest
          build-args: |
            BUILDNODE=GitHub (Run Number: ${{ github.run_number }} Run ID: ${{ github.run_id }})
            BUILDID=${{ github.run_id }}
            BUILDNUMBER=${{ github.run_number }}
            SOURCE_COMMIT=${{ github.sha }}
          no-cache: true
      # - name: test production environment
      #   run: make env-file-prd && make composer-install && make prd && sleep 15 && docker-compose exec -T pull-journal-central /bin/bash -c "php artisan test"     
      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker HUB
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push apfelwurm/pull-journal-central:latest